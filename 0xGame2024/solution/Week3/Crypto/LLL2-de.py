from Crypto.Util.number import getPrime, inverse
from hashlib import md5


def MD5(m):
    return md5(str(m).encode()).hexdigest()


m = 12813864523019740432913161815051292412705285817864701047922722497269479288096574264414061282833203433542813637861620032851255308640850882149603687035724753
cur = 11804527453299586684489593808016317337345238230165321056832279785591503368758306671170625597063579251464905729051049524014502008954170088604924368057540940
a = 88228655655643892993781402176287725906648157132284850532547692363725282117565848131827912110567885672978666024219540979856
a = 105335058376849464581926358411480063090049833236632732289586293246093519574939
print(a.bit_length())  # 256
seed = (cur * inverse(a, m)) % m
print(seed.bit_length())  # 510
print("0xGame{" + MD5(seed) + "}")  # 0xGame{2db84757dd4197f9b9441be25f35bfd5}
